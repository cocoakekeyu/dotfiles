syntax on

set nocompatible
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab
set nobackup
set noswapfile
set incsearch
set hlsearch
set smartcase
set smartindent
set showcmd
set showmode
set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,latin1
set pastetoggle=<f5>
set backspace=indent,eol,start
set redrawtime=10000

colorscheme desert

"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

"Python code can't exceed 120 char
autocmd FileType python call Highlight_120()
fun Highlight_120()
  highlight OverLength ctermbg=red ctermfg=white guibg=#592929
  match OverLength /\%121v.\+/
endfun

"Excellent buffer manager map
nnoremap ` :call bufferhint#Popup()<CR>
nnoremap \ :call bufferhint#LoadPrevious()<CR>

let mapleader = ';'

"Split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

vnoremap < <gv
vnoremap > >gv

nnoremap <leader>l :nohlsearch<CR>
nnoremap <leader>s :Ack 

nnoremap <C-i> :NERDTreeToggle<CR>
nnoremap <leader>q :TagbarToggle<CR>
nnoremap <leader>p "+p
" nnoremap <leader>c  :!pandoc -f markdown --css=$HOME/markdown-css/github.css -t html -o /tmp/mdconvtmp.html %;google-chrome /tmp/mdconvtmp.html<CR>
nnoremap <leader>d :YcmCompleter GoTo<CR>
nnoremap <leader>f :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>g :GoDef<CR>
nnoremap <leader>j :call append(line('.'), 'import ipdb;ipdb.set_trace()')<CR>
nnoremap <leader>c :GoBuild<CR>
nnoremap <leader>r :SyntasticReset<CR>


let g:os = substitute(system('uname'), '\n', '', '')
if g:os == "Darwin"
  nnoremap <leader>p :r !pbpaste<CR>
  nnoremap "+y :w !pbcopy<CR>
endif

"Vundle plugin: https://github.com/VundleVim/Vundle.vim
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'mileszs/ack.vim'
Plugin 'Valloric/YouCompleteMe'
"Plugin 'davidhalter/jedi-vim'
Plugin 'kien/ctrlp.vim'
Plugin 'vim-scripts/ctags.vim'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
"Plugin 'nvie/vim-flake8'
Plugin 'scrooloose/nerdtree'
Plugin 'hynek/vim-python-pep8-indent'
Plugin 'hdima/python-syntax'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-commentary'
Plugin 'bsdelf/bufferhint'
" Plugin 'posva/vim-vue'
" Plugin 'vim-ruby/vim-ruby'
" Plugin 'tpope/vim-rails'
Plugin 'majutsushi/tagbar'              "a class outline viewer for Vim
Plugin 'fatih/vim-go'
Plugin 'tpope/vim-fugitive'             "Fugitive is the premier Vim plugin for Git
Plugin 'benmills/vimux'                 "vim tmux interact
Plugin 'sebdah/vim-delve'               "delve go调试(先安装 delve)
Plugin 'ntpeters/vim-better-whitespace' "删除多余空格
Plugin 'junegunn/gv.vim'                  "git commit brower

call vundle#end()
filetype plugin on
"Vundle plugin

"Use the_silver_searcher(ag) replace ack
let g:ackprg = 'ag --nogroup --nocolor --column'

let g:vim_markdown_folding_disabled=1

"YCM
let g:ycm_python_binary_path = 'python'
let g:ycm_server_python_binary_path = '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3'
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_semantic_triggers =  {
			\ 'c,cpp,python,java,go,erlang,perl': ['re!\w{2}'],
			\ 'cs,lua,javascript': ['re!\w{2}'],
			\ }

let python_highlight_all = 1
"let python_space_error_highlight = 0
highlight PMenu ctermfg=0 ctermbg=7 guifg=black guibg=darkgrey
highlight PMenuSel ctermfg=242 ctermbg=8 guifg=darkgrey guibg=black


"Syntastic settings
let g:syntastic_error_symbol='>>'       " 错误行使用'>>' 标记
let g:syntastic_warning_symbol='>'      " 警告行使用'>' 标记
"let g:syntastic_check_on_open=1     " 打开文件时即开启语法检查
let g:syntastic_check_on_wq=0       " 保存并退出时不进行语法检查
let g:ycm_disable_for_files_larger_than_kb = 0
let g:syntastic_enable_highlighting=1   " 提示内容高亮显示
let g:syntastic_python_checkers=['flake8']     " 设置Python检查规则为pyflakes和pep8
let g:syntastic_always_populate_loc_list = 0   " 提示内容显示相关
let g:syntastic_auto_loc_list = 0
let g:syntastic_loc_list_height = 5

"vim-go settings
let g:go_def_mod_mode='godef'
let g:go_def_mode='gopls'
let g:go_info_mode='gopls'
"let g:go_debug=["lsp"]     "vim-go gopls debug log

"vim-delve settings
let g:delve_use_vimux = 1
